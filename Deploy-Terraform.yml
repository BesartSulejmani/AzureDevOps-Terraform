# Terraform Deploy
# Besart Sulejmani

# Created 15-03-2021
# https://aka.ms/yaml

name: Deploy Terraform

# Automatically trigger pipeline in Azure DevOps by pushing code to master branch
trigger: 
  branches:
    include:
      - master

# Variable group from Azure DevOps library
variables:
- group: backend_config

pool:
  vmImage: 'ubuntu-latest'

stages :
- stage: validation
  jobs:
  - job: validate_terraform
    continueOnError: false
    steps:

    - task: TerraformTaskV1@0
      displayName: 'Terraform : Init'
      inputs:
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: '$(tbc__backend_service_arm)'
        backendAzureRmResourceGroupName: '$(tbc__resource_group_name)'
        backendAzureRmStorageAccountName: '$(tbc__storage_account_name)'
        backendAzureRmContainerName: '$(tbc__container_name)'
        backendAzureRmKey: '$(tbc__key)'
    
    - task: TerraformTaskV1@0
      displayName: 'Terraform : Validate'
      inputs:
        command: validate
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
    
    - task: TerraformTaskV1@0
      displayName: 'Terraform : Plan'
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        environmentServiceNameAzureRM: '$(tbc__backend_service_arm)'

- stage: deploy
  dependsOn: validation
  condition: succeeded('validation')
  jobs:
  - job: deploy_terraform
    continueOnError: false
    steps:
    
    - task: TerraformTaskV1@0
      displayName: 'Terraform : Init'
      inputs:
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: '$(tbc__backend_service_arm)'
        backendAzureRmResourceGroupName: '$(tbc__resource_group_name)'
        backendAzureRmStorageAccountName: '$(tbc__storage_account_name)'
        backendAzureRmContainerName: '$(tbc__container_name)'
        backendAzureRmKey: '$(tbc__key)'

    - task: TerraformTaskV1@0
      displayName: 'Terraform : Apply'
      inputs:
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        environmentServiceNameAzureRM: '$(tbc__backend_service_arm)'
